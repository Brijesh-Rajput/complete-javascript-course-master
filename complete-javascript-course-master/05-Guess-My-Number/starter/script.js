'use strict';

/*
document is an entry point of DOM. document is an object of DOM(Document object model). 
DOM allows to access html and styles to manipulate them. DOM is a basically connection point between html document and js code. 
DOM is automatically created by the browser as soon as the html page load. 
Tree Structure(DOM) generated by the browser. In this tree, Each html element is one object.
DOM always start with document object(it's a special object).
document object is need to start selecting an element.
First child element of document is usually HTML element(its a root element in the html document).
DOM tree also have text,comments and other stuffs other than element. B'coz:- whatever in the html documnet has to be in the DOM --> This is the rule. DOM is a complete representation of the html. 
We can also manipulate CSS Styles with DOM manipulation. Whenever manipulating style, we always need to specify value in string.

//NOTE:-
DOM != Javascript
DOM methods & properties for DOM Manipulation isNOT a part of javascript.
DOM & DOM methods are the part of WEB API's. Web API's(are like libraries) that browser implement. We can interact with JS. 
Q) Can we interact with API's with C++(otherthan Js language) ????????????????
This Web API's also written in JS.

Besides the DOM there are other API like Timers,Fetch,etc...
*/


//selector which we used in CSS will be passed in this querySelector() function.
//querySelector() selects only an element whereas querySelectorAll() selects all elements of the given specified argument.

/*
console.log(document.querySelector('.message')); //o/p:-(returns an element) <p class="message">Start guessing...</p>   ===> hover this console output and see the effect on page. 

//review: @me:-
console.log(document.querySelector('.message'), typeof document.querySelector('.message'));

console.log(document.querySelector('.message').textContent); //reading text content from the element
document.querySelector('.message').textContent = 'ðŸŽ‰ Correct Number!';
console.log(document.querySelector('.message').textContent);

// document.querySelector('.number') = 13; //Wrong! b'coz element has much more thing.
document.querySelector('.number').textContent = 13; //putting content in div container.
document.querySelector('.score').textContent = 10;

//review: @me:-
console.log(document.querySelector('.guess')); //explore all the attributes and functions of an element. E.g:- see below
console.log(document.querySelector('.guess').className); 


// To fetch the value from the input field element:-
console.log(document.querySelector('.guess').value); //Output:- empty b'coz initially it is an empty.
document.querySelector('.guess').value=23;
console.log(document.querySelector('.guess').value);
*/

//Handling Click Events:- 
/* EventListners will be used. Event which happens on the page like mouse-click, mouse-moving, key-press, etc... 
With an EventListner we can wait for a certain event to happen and then react to it.
*/
let secretNumber = Math.trunc(Math.random()*20)+1; //number between 1 and 20. ig, if 0 included then we are not able to detect the empty input given by the user by this following algo.
//Math.random() ==> number between 0 and 1.
//Math.random()*20 ==> number between 0 and 19.  =====> HOW this works(Behind Maths) ??? 
// document.querySelector('.number').textContent = secretNumber;

//review: @me:-
/*
let score = Number(document.querySelector('.score').textContent); //let used b'coz we have to mutate the score value whenever user-guess is incorrect.
*/
let score = 20;
let highscore = 0;
const displayMessage = function(message){ //Refracting the code to avoid the DRY principles.
    document.querySelector('.message').textContent = message;
}

document.querySelector('.check').addEventListener('click', function(){
    
    // console.log(document.querySelector('.guess').value);
    let guess = document.querySelector('.guess').value;
    console.log(guess, typeof guess); //Whenever we get something from the UI(for e.g:- input field) it usually always is a string.

    //converting type for comparison. ig,we can do comparison with loosely comparison oprtr.
    guess = Number(guess); 
    console.log(guess, typeof guess);

    if(!guess){ //when user doesn't give input and click on check button.
        
        console.log(guess); //0 --> It's a falsy value.
        // document.querySelector('.message').textContent = 'â›” No Number!';
        displayMessage('â›” No Number!');

    }else if(guess === secretNumber){
        //When player == wins
        // document.querySelector('.message').textContent = 'ðŸŽ‰ Correct Number!';
        displayMessage('ðŸŽ‰ Correct Number!');
        document.querySelector('.number').textContent = secretNumber;
        
        //imp: This manipulation of Style will happen on inline style. we're not changing CSS file. Style Property name must be in CamelCase not in two-words.
        // document.querySelector('body').style.backgroundColor = green;  ========> Wrong Syntax!!!!!!
        document.querySelector('body').style.backgroundColor = '#60b347'; //NOTE:- value must bev in string. 
        document.querySelector('.number').style.width = '30rem';

        if(score > highscore){
            highscore = score;
            document.querySelector('.highscore').textContent = highscore;
        }

    }else if(guess !== secretNumber){ 
        //when guess is wrong
        if(score > 1){
            // document.querySelector('.message').textContent = guess > secretNumber ? 'ðŸ“ˆ Too high!': 'ðŸ“‰ Too low!';   
            displayMessage(guess > secretNumber ? 'ðŸ“ˆ Too high!': 'ðŸ“‰ Too low!');
            score--; // score -=1;
            document.querySelector('.score').textContent = score;
        }else{
            // document.querySelector('.message').textContent = 'ðŸ’¥ You loose the game!';  
            displayMessage('ðŸ’¥ You loose the game!');
            document.querySelector('.score').textContent = 0;
        }  

    }
    /*
    else if(guess > secretNumber){
        //When guess is too high
        if(score > 1){
            document.querySelector('.message').textContent = 'ðŸ“ˆ Too high!';   
            score--; // score -=1;
            document.querySelector('.score').textContent = score;
        }else{
            document.querySelector('.message').textContent = 'ðŸ’¥ You loose the game!';  
            document.querySelector('.score').textContent = 0;
        }  

    }else if(guess < secretNumber){
        //When guess is too low
        if(score > 1){
            document.querySelector('.message').textContent = 'ðŸ“‰ Too low!';    
            score--;
            document.querySelector('.score').textContent = score;
        }else{
            document.querySelector('.message').textContent = 'ðŸ’¥ You loose the game!';  
            document.querySelector('.score').textContent = 0;
        }  

    }*/

    // document.querySelector('.message').textContent = 'ðŸŽ‰ Correct Number!';
}) 
//here, we have two class where btn is a generic class which is used in other place also in this html page.

/*
addEventListner() is a special kind of function b'coz it expects eventHandler function in the 2nd argument. TypeofEvent(or NameofEvent) is passed as a 1st argument in the addEventListner() fuction. 
EventHandlerFunction() contains code that we want to execute whenever the event happens.

NOTE:- Function is just a value we have learnt this. If it is just a value then we can also pass it to the another function as a argument just like any other value like string or number.
Function which expects function as an argument callled Callback Functions. ig, cnf it ???????

//Function Expression:- b'coz x stores the function expression & this function() is just a value.
const x = function(){  
    console.log(23);
}

NOTE:- we are only defining the function in the addEventListner() not calling the EventHandlerFuntion. JS engine will call the function as soon as event happens.
*/


//============================= Coding Challenge 1 ==============================================
//Implement Again Button working/Event:-
document.querySelector('.again').addEventListener('click', function(){ //--> this function is also called as anonymous eventHandler function as it doesn't have any name.
    // console.log("again btn works!");
    score = 20;
    secretNumber = Math.trunc(Math.random()*20)+1;
    // document.querySelector('.message').textContent = 'Start guessing...';
    displayMessage('Start guessing...');

    document.querySelector('.score').textContent = score; //value is in Number ????? Why difference. What should be the type of value ?
    document.querySelector('.number').textContent = '?' ; //value is in string. ????
    document.querySelector('.guess').value = ''; //imp: Value of input is always string as we know that. so, empty string means absence of any value there.
    document.querySelector('body').style.backgroundColor = '#222';
    document.querySelector('.number').style.width = '15rem';
});


